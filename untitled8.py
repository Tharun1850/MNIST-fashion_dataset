# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lAmGga2bvRW9yh5Q8AbsheKWNbAZReF6
"""

import numpy as np
import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt

fashion_mnist = keras.datasets.fashion_mnist
(train_images, train_labels ) ,(test_images, test_labels ) = fashion_mnist.load_data()

train_images.shape

# (60000, 28, 28)

type(train_images)

#numpy array

train_images[0,23,23]

#194

train_labels[:10]
#prints 10 from trainset
class_names = [ 'T-shirt or top' , 'Trouser' , 'Dress', 'Coat' , 'Sandal' , 'Sneaker', 'Bag', 'Ankle boot']

plt.figure()
plt.imshow(train_images[0])
plt.colorbar()
plt.grid(False)
plt.show()

#data preprocessing
train_images = train_images / 255.0
test_images = test_images / 255.0

#creating the model


model=keras.Sequential([
    keras.layers.Flatten(input_shape=(28,28)),        #input layer (flattens into a 1D array)
    keras.layers.Dense(128, activation= 'relu'),     #hidden layer  (leniar unit  )
    keras.layers.Dense(120,activation = 'softmax')     #output layer (0 / 1)
    ])
    
    #compiling the model 

model.compile(optimizer='adam',
             loss='sparse_categorical_crossentropy',
             metrics=['accuracy'])
             
#TRAINING THE MODEL
model.fit(train_images, train_labels , epochs =10)

#EVALUATING THE MODEL
test_loss, test_acc = model.evaluate(test_images, test_labels, verbose=2)
print('Test Accuracy is:',test_acc)